name: Fix terraform file formatting

on:
  push:
    branches:
      - master

jobs:
  format:
    runs-on: ubuntu-latest
    name: Check terraform file are formatted correctly
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: terraform fmt
        uses: dflook/terraform-fmt@v1
        with:
          path: terraform

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v2
        with:
          commit-message: terraform fmt
          title: Reformat terraform files
          body: Update terraform files to canonical format using `terraform fmt`
          branch: automated-terraform-fmt








# name: "Terraform"

# on:
#   push:
#     branches:
#     - master
    
#   pull_request:
#     branches:

#     - master

# jobs:
#   comment:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - uses: hashicorp/setup-terraform@v1

#     # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

     
#     - name: Terraform Init
#       id: init
#       run: terraform init
      
#     - name: Terraform fmt
#       id: fmt
#       run: terraform fmt -check
#       continue-on-error: true
      
#     - name: Terraform Validate
#       id: validate
#       run: terraform validate -no-color

#     - name: Terraform Plan
#       id: plan 
#       run: terraform plan -no-color
#       continue-on-error: true

#     - uses: actions/github-script@0.9.0
#       if: github.event_name == 'pull_request'
#       env:
#         PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#       with:
#         github-token: ${{ secrets.GITHUB_TOKEN }}
#         script: |
#           const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#           #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#           #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
#           #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
#           <details><summary>Show Plan</summary>
      
#           \`\`\`${process.env.PLAN}\`\`\`
      
#           </details>
      
#           *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
        
#           github.issues.createComment({
#             issue_number: context.issue.number,
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             body: output
#           })
